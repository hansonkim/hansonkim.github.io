{
  "research_date": "2025-10-16",
  "target_versions": {
    "eleventy": "3.1.2",
    "tailwind": "4.x (latest stable)",
    "recommended_approach": "Tailwind 4 with Eleventy 3 using eleventy.before hook"
  },
  "package_recommendations": {
    "required_packages": [
      "tailwindcss@^4.1.14",
      "postcss@^8.5.6",
      "@tailwindcss/postcss (for v4)",
      "cssnano (for production minification)"
    ],
    "optional_packages": [
      "autoprefixer@^10.4.21 (browser compatibility)",
      "@tailwindcss/typography (enhanced typography)",
      "postcss-cli@^11.0.1 (CLI support)"
    ],
    "build_tools": [
      "npm-run-all (for parallel scripts)",
      "concurrently (alternative parallel tool)"
    ]
  },
  "eleventy_configuration": {
    "approach": "eleventy.before hook with PostCSS pipeline",
    "benefits": [
      "Zero-configuration setup with Tailwind v4",
      "Single process (no parallel builds needed)",
      "Automatic CSS compilation before HTML generation",
      "Built-in Eleventy watch support"
    ],
    "config_requirements": [
      "Define eleventy.before event hook",
      "Set up PostCSS processor pipeline",
      "Configure Tailwind content paths",
      "Add watch targets for CSS source files"
    ],
    "example_config": "Use eleventy.before hook to compile Tailwind CSS with PostCSS and minify with cssnano before HTML generation"
  },
  "build_script_setup": {
    "modern_approach": {
      "method": "Eleventy hook-based (recommended for v3 + Tailwind v4)",
      "dev_command": "eleventy --serve",
      "build_command": "NODE_ENV=production eleventy",
      "notes": "CSS processing handled automatically via eleventy.before hook"
    },
    "legacy_approach": {
      "method": "Parallel processes (Tailwind v3 or earlier)",
      "dev_scripts": {
        "eleventy:dev": "eleventy --serve",
        "css:dev": "postcss src/styles/tailwind.css -o _site/css/style.css --watch",
        "dev": "npm-run-all --parallel eleventy:dev css:dev"
      },
      "build_scripts": {
        "eleventy:build": "eleventy",
        "css:build": "NODE_ENV=production postcss src/styles/tailwind.css -o _site/css/style.css",
        "build": "npm-run-all css:build eleventy:build"
      }
    }
  },
  "file_watching_setup": {
    "watch_targets": [
      "tailwind.config.js",
      "src/styles/**/*.css",
      "postcss.config.js"
    ],
    "implementation": "eleventyConfig.addWatchTarget(\"./src/styles/**/*.css\")",
    "hot_reload_notes": [
      "Eleventy dev server automatically reloads on template changes",
      "CSS changes trigger rebuild via watch targets",
      "For eleventy.before hook: CSS compiles before server reload",
      "Known issue: Browser may reload before CSS write completes in eleventy.after"
    ],
    "best_practice": "Use eleventy.before instead of eleventy.after to ensure CSS is ready before page reload"
  },
  "production_optimization": {
    "content_purging": {
      "config_location": "tailwind.config.js",
      "content_array": [
        "./src/**/*.{html,md,njk,ejs,pug,js}",
        "./.eleventy.js"
      ],
      "notes": "Tailwind v4 auto-purges unused styles in production builds",
      "file_size_impact": "3MB+ unpurged â†’ 5-15KB purged (typical)"
    },
    "minification": {
      "tool": "cssnano",
      "integration": "PostCSS plugin in production pipeline",
      "cli_alternative": "tailwindcss --minify flag",
      "compression": "Enable Brotli/gzip on web server for additional 70-80% reduction"
    },
    "jit_mode": {
      "status": "Default in Tailwind v3+",
      "benefits": [
        "Generates only used utilities",
        "Faster build times",
        "Smaller dev builds",
        "No manual purge configuration needed"
      ]
    },
    "safelist": {
      "purpose": "Preserve dynamically generated class names",
      "location": "tailwind.config.js",
      "example": "safelist: [\"bg-red-500\", \"text-center\"]",
      "use_cases": [
        "Classes generated by plugins",
        "Dynamic class names from CMS",
        "Template literals with variable classes"
      ]
    },
    "performance_targets": {
      "typical_production_size": "5-15KB gzipped",
      "benchmark": "Netflix Top 10 site: 6.5KB CSS total",
      "build_time": "Sub-second with JIT mode"
    }
  },
  "integration_methods_comparison": {
    "method_1_hook_based": {
      "name": "Eleventy.before Hook (Recommended for v3 + v4)",
      "complexity": "Low",
      "processes": "Single",
      "hot_reload": "Excellent",
      "pros": [
        "Cleanest solution",
        "No parallel process management",
        "Built-in Eleventy commands work",
        "Automatic CSS compilation"
      ],
      "cons": [
        "Requires Eleventy 2.0+",
        "More complex initial setup"
      ]
    },
    "method_2_concurrent": {
      "name": "Parallel Processes (npm-run-all/concurrently)",
      "complexity": "Medium",
      "processes": "Two parallel",
      "hot_reload": "Good",
      "pros": [
        "Works with all versions",
        "Clear separation of concerns",
        "Well-documented approach"
      ],
      "cons": [
        "Two processes to manage",
        "Custom scripts needed",
        "Potential race conditions"
      ]
    },
    "method_3_cli": {
      "name": "Tailwind CLI + Eleventy CLI",
      "complexity": "Low",
      "processes": "Two parallel",
      "hot_reload": "Basic",
      "pros": [
        "Simplest to understand",
        "No build tools needed"
      ],
      "cons": [
        "Manual command management",
        "No build automation",
        "Not suitable for CI/CD"
      ]
    },
    "method_4_plugin": {
      "name": "Eleventy Tailwind Plugins",
      "complexity": "Low",
      "processes": "Single",
      "hot_reload": "Good",
      "pros": [
        "Plugin handles configuration",
        "Minimal setup code"
      ],
      "cons": [
        "Third-party dependency",
        "May lag behind Tailwind versions",
        "Less control over build"
      ]
    }
  },
  "tailwind_config_best_practices": {
    "content_scanning": [
      "Include all template file extensions",
      "Scan JavaScript files with dynamic classes",
      "Include Eleventy config if using utility classes there"
    ],
    "theme_customization": [
      "Extend default theme rather than replacing",
      "Use CSS custom properties for dynamic values",
      "Define semantic color names"
    ],
    "plugins": [
      "@tailwindcss/typography - Better default prose styling",
      "@tailwindcss/forms - Form element styling",
      "@tailwindcss/aspect-ratio - Aspect ratio utilities",
      "@tailwindcss/container-queries - Container query support"
    ]
  },
  "common_pitfalls": [
    {
      "issue": "Classes purged in production",
      "solution": "Add to safelist or use complete class names (not string concatenation)"
    },
    {
      "issue": "Hot reload not working",
      "solution": "Add CSS files to Eleventy watch targets"
    },
    {
      "issue": "Large development builds",
      "solution": "Ensure JIT mode is enabled (default in v3+)"
    },
    {
      "issue": "Browser reload before CSS ready",
      "solution": "Use eleventy.before instead of eleventy.after hook"
    }
  ],
  "migration_notes": {
    "from_v3_to_v4": [
      "Install @tailwindcss/postcss plugin",
      "Update PostCSS config to use new plugin",
      "Review breaking changes in Tailwind v4 docs",
      "Test all custom utilities and plugins"
    ],
    "from_eleventy_2_to_3": [
      "Update Node.js to v18+",
      "Review breaking changes in Eleventy v3",
      "Test all custom filters and shortcodes",
      "Update plugins to compatible versions"
    ]
  },
  "recommended_file_structure": {
    "css_source": "src/styles/tailwind.css",
    "css_output": "_site/css/style.css",
    "config_files": [
      "tailwind.config.js",
      "postcss.config.js",
      ".eleventy.js"
    ],
    "template_include": "<link rel=\"stylesheet\" href=\"/css/style.css\">"
  },
  "resources": [
    "https://www.humankode.com/eleventy/how-to-set-up-tailwind-4-with-eleventy-3/",
    "https://tailwindcss.com/docs/installation/using-postcss",
    "https://www.11ty.dev/docs/watch-serve/",
    "https://github.com/thecarlo/tailwind-4-with-eleventy-3"
  ]
}
